import type { DefaultLightingType, OrthographicType, RenderMode, ShadePlotMode, UCSPerViewport } from '../../../consts';
import type { Point2D, Point3D } from '../../../types';
export interface ViewportEntity {
    type: 'VIEWPORT';
    subclassMarker: string;
    handle?: string;
    layer?: string;
    viewportCenter: Point3D;
    width: number;
    height: number;
    status: number;
    viewportId: string;
    displayCenter: Point2D;
    snapBase: Point2D;
    snapSpacing: Point2D;
    gridSpacing: Point2D;
    viewDirection: Point3D;
    targetPoint: Point3D;
    perspectiveLensLength: number;
    frontClipZ: number;
    backClipZ: number;
    viewHeight: number;
    snapAngle: number;
    viewTwistAngle: number;
    circleZoomPercent: number;
    frozenLayerIds?: string[];
    statusBitFlags: number;
    clippingBoundaryId?: string;
    sheetName: string;
    renderMode: RenderMode;
    ucsPerViewport: UCSPerViewport;
    ucsOrigin?: Point3D;
    ucsXAxis?: Point3D;
    ucsYAxis?: Point3D;
    ucsId?: string;
    ucsBaseId?: string;
    orthographicType?: OrthographicType;
    elevation: number;
    shadePlotMode: ShadePlotMode;
    majorGridFrequency: number;
    backgroundId?: string;
    shadePlotId?: string;
    visualStyleId?: string;
    isDefaultLighting: boolean;
    defaultLightingType?: DefaultLightingType;
    brightness: number;
    contrast: number;
    ambientLightColor?: string;
    sunId?: string;
    softPointer?: string;
}
